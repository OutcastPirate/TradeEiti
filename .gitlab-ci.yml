stages:
  - build
  - deploy

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: always
    - when: never

variables:
  FRONTEND_IMAGE_NAME: front
  BACKEND_IMAGE_NAME: back
  SSH_HOST: arcziweb.com
  SSH_PORT: 22
  SSH_USER: pap
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2

services:
  - docker:24.0.5-dind


before_script:
  - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin

  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - chmod 400 "$SSH_PRIVATE_KEY"
  - ssh-add "$SSH_PRIVATE_KEY"
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "HOST *" > ~/.ssh/config
  - echo "StrictHostKeyChecking no" >> ~/.ssh/config

build_frontend:
  stage: build
  script:
    - cd frontend
    - docker build -t $DOCKER_HUB_USERNAME/$FRONTEND_IMAGE_NAME:$CI_COMMIT_SHORT_SHA .
    - docker push $DOCKER_HUB_USERNAME/$FRONTEND_IMAGE_NAME:$CI_COMMIT_SHORT_SHA
  rules:
    - changes:
        - frontend/**/*

build_backend:
  stage: build
  script:
    - cd backend
    - docker build -t $DOCKER_HUB_USERNAME/$BACKEND_IMAGE_NAME:$CI_COMMIT_SHORT_SHA .
    - docker push $DOCKER_HUB_USERNAME/$BACKEND_IMAGE_NAME:$CI_COMMIT_SHORT_SHA
  rules:
    - changes:
        - backend/**/*

deploy_frontend:
  stage: deploy
  script:
    - ssh -p $SSH_PORT $SSH_USER@$SSH_HOST "docker pull $DOCKER_HUB_USERNAME/$FRONTEND_IMAGE_NAME:$CI_COMMIT_SHORT_SHA"
    - ssh -p $SSH_PORT $SSH_USER@$SSH_HOST "sed -i 's|$DOCKER_HUB_USERNAME/$FRONTEND_IMAGE_NAME:.*|$DOCKER_HUB_USERNAME/$FRONTEND_IMAGE_NAME:$CI_COMMIT_SHORT_SHA|' usos/docker-compose.yml"
  rules:
    - changes:
        - frontend/**/*

deploy_backend:
  stage: deploy
  script:
    - ssh -p $SSH_PORT $SSH_USER@$SSH_HOST "docker pull $DOCKER_HUB_USERNAME/$BACKEND_IMAGE_NAME:$CI_COMMIT_SHORT_SHA"
    - ssh -p $SSH_PORT $SSH_USER@$SSH_HOST "sed -i 's|$DOCKER_HUB_USERNAME/$BACKEND_IMAGE_NAME:.*|$DOCKER_HUB_USERNAME/$BACKEND_IMAGE_NAME:$CI_COMMIT_SHORT_SHA|' usos/docker-compose.yml"
  rules:
    - changes:
        - backend/**/*

start_all:
  stage: deploy
  script:
    - ssh -p $SSH_PORT $SSH_USER@$SSH_HOST "cd usos && docker compose stop && docker compose build && docker compose up -d"


